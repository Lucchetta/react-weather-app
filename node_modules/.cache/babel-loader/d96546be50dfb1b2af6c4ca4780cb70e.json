{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleForscastResponse(response) {\n    console.log(response.data);\n    setForecast(response.data);\n  }\n\n  if (loaded) {\n    return \"loaded\";\n  } else {\n    let apiKey = \"87a4d33f9276aba60312862a75e60dce\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForscastResponse);\n    return props.city;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/francescalmccall/Desktop/react-weather-app/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleForscastResponse","response","console","log","data","apiKey","url","city","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AAGI,WAASQ,sBAAT,CAAgCC,QAAhC,EAAyC;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAL,IAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AAGH;;AAED,MAAIR,MAAJ,EAAY;AACR,WAAO,QAAP;AACH,GAFD,MAEO;AACL,QAAIS,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAI,sDAAqDX,KAAK,CAACY,IAAK,UAASF,MAAO,eAA3F;AACEZ,IAAAA,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBT,sBAApB;AACA,WAAOL,KAAK,CAACY,IAAb;AAEH;AAGJ;;GAvBuBb,e;;KAAAA,e","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\n\n\nexport default function WeatherForecast(props){\nconst [loaded, setLoaded] = useState(false);\nconst [forecast, setForecast] = useState(null);\n\n\n    function handleForscastResponse(response){\n        console.log(response.data);\n        setForecast(response.data);\n\n\n    }\n\n    if (loaded) {\n        return \"loaded\";    \n    } else {\n      let apiKey = \"87a4d33f9276aba60312862a75e60dce\";\n      let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n        axios.get(url).then(handleForscastResponse);\n        return props.city;\n\n    }\n    \n   \n}"]},"metadata":{},"sourceType":"module"}