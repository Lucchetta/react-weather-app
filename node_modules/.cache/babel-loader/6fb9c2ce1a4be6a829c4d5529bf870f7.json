{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/francescalmccall/Desktop/react-weather-app/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleForscastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && props.city === forecast.city.name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast row\",\n      children: [/*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n        data: forecast.list[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else {\n    let apiKey = \"4c7909ce30ce17e58fdee55638bb26ce\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForscastResponse);\n    return props.city;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/francescalmccall/Desktop/react-weather-app/src/WeatherForecast.js"],"names":["React","useState","WeatherForecastPreview","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleForscastResponse","response","data","city","name","list","apiKey","url","get","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;AAGI,WAASS,sBAAT,CAAgCC,QAAhC,EAAyC;AAErCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AAIH;;AAED,MAAID,MAAM,IAAID,KAAK,CAACQ,IAAN,KAAeL,QAAQ,CAACK,IAAT,CAAcC,IAA3C,EAAiD;AAC7C,wBACI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA,8BACQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEN,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHR,eAIQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJR,eAKQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cALR,eAMQ,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAWO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAI,sDAAqDZ,KAAK,CAACQ,IAAK,UAASG,MAAO,eAA3F;AACEb,IAAAA,KAAK,CAACe,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBT,sBAApB;AACA,WAAOL,KAAK,CAACQ,IAAb;AAEH;AAGJ;;GAlCuBT,e;;KAAAA,e","sourcesContent":["import React, {useState} from \"react\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\n\n\nexport default function WeatherForecast(props){\nconst [loaded, setLoaded] = useState(false);\nconst [forecast, setForecast] = useState(null);\n\n\n    function handleForscastResponse(response){\n\n        setForecast(response.data);\n        setLoaded(true);\n        \n\n\n    }\n \n    if (loaded && props.city === forecast.city.name) {\n        return(\n            <div className= \"WeatherForecast row\">\n                    <WeatherForecastPreview data={forecast.list[0]}/>\n                    <WeatherForecastPreview data={forecast.list[1]}/>\n                    <WeatherForecastPreview data={forecast.list[2]}/>\n                    <WeatherForecastPreview data={forecast.list[3]}/>\n                    <WeatherForecastPreview data={forecast.list[4]}/>\n                    <WeatherForecastPreview data={forecast.list[5]}/>         \n            </div> \n        );  \n    } else {\n      let apiKey = \"4c7909ce30ce17e58fdee55638bb26ce\";\n      let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n        axios.get(url).then(handleForscastResponse);\n        return props.city;\n\n    }\n    \n   \n}"]},"metadata":{},"sourceType":"module"}